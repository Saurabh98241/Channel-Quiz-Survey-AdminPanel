
@model BusinessLogic.EntityClass.QuestionEntity

@{
    ViewBag.Title = "EditQuestion";
    Layout = "~/Views/Shared/_Layout.cshtml";
}



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="row">
        <div class="col-md-12">
            <div class="box box-primary">
                <div class="box-header">
                    <h3 class="box-title">Edit Question</h3>
                </div>
                <div class="form-horizontal Padding10">

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.QuestionId)

                    <div class="form-group">
                        @Html.LabelFor(model => model.QuizId, "Quiz", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.QuizId, ViewBag.Quizs as SelectList, "Select Quiz", new { @class = "form-control", id = "Quiz" })
                            @*@Html.DropDownList("QuizId", null, htmlAttributes: new { @class = "form-control" })*@
                            @Html.ValidationMessageFor(model => model.QuizId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Question, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Question, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Question, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group" style="display:none">
                        @Html.LabelFor(model => model.CreatedBy, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.CreatedBy, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CreatedBy, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group" style="display:none">
                        @Html.LabelFor(model => model.CreatedDate, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.CreatedDate, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CreatedDate, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group" style="display:none">
                        @Html.LabelFor(model => model.UpdatedBy, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.UpdatedBy, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.UpdatedBy, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group" style="display:none">
                        @Html.LabelFor(model => model.UpdatedDate, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.UpdatedDate, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.UpdatedDate, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group" style="display:none">
                        @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.IsActive)
                                @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Save" class="btn btn-primary" />
                            @Html.ActionLink("Back to List", "Question", "Question", new { @class = "btn btn-danger" })
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}


